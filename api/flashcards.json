[
  {
    "id": 1,
    "topic": "1. 8051: Tổng quan & Kiến trúc",
    "term": "Kiến trúc Harvard",
    "definition": "8051 sử dụng kiến trúc Harvard, có không gian bộ nhớ chương trình (Code Memory) và bộ nhớ dữ liệu (Data Memory) hoàn toàn tách biệt. Mỗi không gian có bus địa chỉ và bus dữ liệu riêng, cho phép CPU đồng thời tìm nạp lệnh và truy cập dữ liệu, giúp tăng tốc độ xử lý."
  },
  {
    "id": 2,
    "topic": "1. 8051: Tổng quan & Kiến trúc",
    "term": "Kiến trúc CISC (Complex Instruction Set Computer)",
    "definition": "8051 thuộc họ CISC, đặc trưng bởi tập lệnh chứa nhiều lệnh mạnh mẽ, phức tạp. Một lệnh có thể thực hiện nhiều thao tác cấp thấp (ví dụ: `DJNZ` vừa giảm, vừa so sánh, vừa nhảy). Điều này giúp mã nguồn assembly ngắn gọn hơn nhưng có thể cần nhiều chu kỳ máy để thực thi."
  },
  {
    "id": 3,
    "topic": "1. 8051: Tổng quan & Kiến trúc",
    "term": "Chu kỳ máy (Machine Cycle)",
    "definition": "Là đơn vị thời gian cơ bản để 8051 thực hiện một thao tác nội bộ. Đối với 8051 chuẩn, một chu kỳ máy bao gồm 12 chu kỳ xung nhịp (clock cycle). Công thức: T_machine = 12 / f_osc."
  },
  {
    "id": 4,
    "topic": "1. 8051: Tổng quan & Kiến trúc",
    "term": "Tần số thạch anh 'ma thuật' 11.0592 MHz",
    "definition": "Tần số này được ưa chuộng cho các ứng dụng giao tiếp nối tiếp (UART) vì nó có thể chia chẵn để tạo ra tất cả các tốc độ baud chuẩn (9600, 4800, 2400,...) với sai số bằng 0, đảm bảo truyền nhận dữ liệu ổn định."
  },
  {
    "id": 5,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Chân EA (External Access)",
    "definition": "Chân quyết định nguồn của bộ nhớ chương trình. Khi EA nối VCC (logic 1), 8051 chạy chương trình từ ROM nội. Khi EA nối GND (logic 0), 8051 bỏ qua ROM nội và chạy chương trình hoàn toàn từ bộ nhớ ngoài."
  },
  {
    "id": 6,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Chân ALE (Address Latch Enable)",
    "definition": "Tín hiệu ra, dùng để phân kênh địa chỉ và dữ liệu trên Port 0 khi truy cập bộ nhớ ngoài. Khi ALE ở mức cao, Port 0 đang xuất 8 bit địa chỉ thấp (A0-A7). Tín hiệu này điều khiển một chốt (latch) bên ngoài (ví dụ 74LS373) để lưu lại địa chỉ này."
  },
  {
    "id": 7,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Chân PSEN (Program Store Enable)",
    "definition": "Tín hiệu ra, tích cực ở mức thấp. Nó hoạt động như tín hiệu cho phép đọc (read strobe) khi CPU tìm nạp lệnh từ bộ nhớ chương trình BÊN NGOÀI. Nó thường được nối với chân OE (Output Enable) của chip ROM/EPROM ngoài."
  },
  {
    "id": 8,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Đặc điểm Port 0",
    "definition": "Port 0 (chân 32-39) có cấu trúc cực máng hở (open-drain) và không có điện trở kéo lên bên trong. Khi dùng làm cổng output, bắt buộc phải kết nối các điện trở kéo lên bên ngoài với VCC. Nó cũng có chức năng kép là bus địa chỉ thấp (A0-A7) và bus dữ liệu (D0-D7)."
  },
  {
    "id": 9,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Đặc điểm Port 2",
    "definition": "Port 2 (chân 21-28) là cổng I/O hai chiều có điện trở kéo lên bên trong. Khi truy cập bộ nhớ ngoài, nó có chức năng kép là xuất ra 8 bit địa chỉ cao (A8-A15)."
  },
  {
    "id": 10,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Các chức năng thay thế của Port 3",
    "definition": "P3.0(RxD), P3.1(TxD): Giao tiếp nối tiếp UART. P3.2(INT0), P3.3(INT1): Ngắt ngoài 0, 1. P3.4(T0), P3.5(T1): Ngõ vào cho Timer/Counter 0, 1. P3.6(WR), P3.7(RD): Tín hiệu điều khiển ghi/đọc RAM ngoài."
  },
  {
    "id": 11,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Cấu hình Port làm ngõ vào (Input)",
    "definition": "Để cấu hình một chân I/O của 8051 làm ngõ vào, người lập trình phải ghi mức logic '1' vào bit tương ứng của thanh ghi cổng đó (ví dụ: `SETB P1.0`). Thao tác này sẽ tắt transistor kéo xuống, cho phép chân đọc tín hiệu từ bên ngoài."
  },
  {
    "id": 12,
    "topic": "3. 8051: Tổ chức Bộ nhớ",
    "term": "Phân bố RAM nội (128 byte)",
    "definition": "00H-1FH: 32 byte cho 4 băng thanh ghi (R0-R7). 20H-2FH: 16 byte cho vùng RAM định địa chỉ bit (128 bit). 30H-7FH: 80 byte cho RAM đa dụng và Ngăn xếp (Stack)."
  },
  {
    "id": 13,
    "topic": "3. 8051: Tổ chức Bộ nhớ",
    "term": "Vấn đề chồng lấn địa chỉ RAM và SFR (trên 8052)",
    "definition": "Trên 8052 (256 byte RAM), vùng RAM cao (80H-FFH) và vùng SFR dùng chung một không gian địa chỉ. CPU phân biệt chúng bằng kiểu định địa chỉ: Kiểu trực tiếp (`MOV A, 90H`) sẽ truy cập SFR (Port 1). Kiểu gián tiếp (`MOV A, @R0`) sẽ truy cập RAM."
  },
  {
    "id": 14,
    "topic": "3. 8051: Tổ chức Bộ nhớ",
    "term": "Vùng SFR (Special Function Registers)",
    "definition": "Chiếm không gian địa chỉ từ 80H đến FFH. Đây không phải là bộ nhớ thông thường mà là tập hợp các thanh ghi dùng để điều khiển và đọc trạng thái của các khối chức năng phần cứng trên chip như các cổng I/O, timer, UART, và hệ thống ngắt."
  },
  {
    "id": 15,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Thanh ghi PSW (Program Status Word)",
    "definition": "Là thanh ghi trạng thái 8-bit (địa chỉ D0H), có thể định địa chỉ bit. Chứa các cờ phản ánh kết quả phép toán: CY (Cờ nhớ), AC (Cờ nhớ phụ cho BCD), OV (Cờ tràn số có dấu), P (Cờ chẵn lẻ). Chứa các bit điều khiển: RS1, RS0 để chọn băng thanh ghi."
  },
  {
    "id": 16,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Thanh ghi SP (Stack Pointer)",
    "definition": "Là con trỏ 8-bit (địa chỉ 81H), luôn chứa địa chỉ của byte dữ liệu cuối cùng được đẩy vào ngăn xếp. Có giá trị mặc định là 07H sau khi reset, nghĩa là ngăn xếp bắt đầu từ 08H. Lệnh PUSH sẽ tăng SP trước rồi ghi. Lệnh POP sẽ đọc trước rồi giảm SP."
  },
  {
    "id": 17,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Thanh ghi DPTR (Data Pointer)",
    "definition": "Là một thanh ghi 16-bit duy nhất, được tạo thành từ hai thanh ghi 8-bit là DPH (byte cao - 83H) và DPL (byte thấp - 82H). Nó được dùng chủ yếu để chứa địa chỉ 16-bit khi truy cập bộ nhớ ngoài (cả chương trình và dữ liệu)."
  },
  {
    "id": 18,
    "topic": "5. 8051: Các kiểu định địa chỉ",
    "term": "Định địa chỉ gián tiếp (Register Indirect)",
    "definition": "Lệnh sử dụng một thanh ghi (chỉ có thể là R0 hoặc R1) làm con trỏ để chứa địa chỉ của toán hạng trong RAM nội. Ký hiệu là dấu a-còng (@), ví dụ: `MOV A, @R0`. Rất mạnh mẽ để xử lý mảng hoặc duyệt vùng nhớ."
  },
  {
    "id": 19,
    "topic": "5. 8051: Các kiểu định địa chỉ",
    "term": "Định địa chỉ chỉ số (Indexed)",
    "definition": "Được thiết kế đặc biệt để đọc dữ liệu từ bộ nhớ chương trình (ROM), thường dùng cho bảng tra. Địa chỉ được tính bằng cách cộng thanh ghi cơ sở (DPTR hoặc PC) với thanh ghi chỉ số A. Lệnh sử dụng là MOVC, ví dụ: `MOVC A, @A+DPTR`."
  },
  {
    "id": 20,
    "topic": "6. 8051: Timer/Counter",
    "term": "Thanh ghi TMOD",
    "definition": "Thanh ghi 8-bit, không định địa chỉ bit, dùng để thiết lập chế độ hoạt động cho cả hai timer. 4 bit thấp cho Timer 0, 4 bit cao cho Timer 1. Mỗi nhóm 4 bit có các bit: GATE, C/T, M1, M0."
  },
  {
    "id": 21,
    "topic": "6. 8051: Timer/Counter",
    "term": "Thanh ghi TCON",
    "definition": "Thanh ghi 8-bit, có thể định địa chỉ bit. Chứa các bit điều khiển chạy/dừng (TR1, TR0), các cờ báo tràn (TF1, TF0) cho timer. 4 bit thấp của TCON dành cho việc điều khiển và báo cờ của các ngắt ngoài (IE1, IT1, IE0, IT0)."
  },
  {
    "id": 22,
    "topic": "6. 8051: Timer/Counter",
    "term": "Timer Mode 2 (8-bit Auto-Reload)",
    "definition": "Trong chế độ này, TLx hoạt động như bộ đếm 8-bit. Thanh ghi THx giữ một giá trị nạp lại không đổi. Mỗi khi TLx đếm tràn từ FFH về 00H, nó sẽ tự động được nạp lại giá trị từ THx. Rất hữu ích để tạo các sự kiện có chu kỳ cố định, đặc biệt là tạo tốc độ baud cho UART."
  },
  {
    "id": 23,
    "topic": "7. 8051: Giao tiếp UART",
    "term": "Thanh ghi SBUF (Serial Buffer)",
    "definition": "Là thanh ghi đệm dữ liệu 8-bit (địa chỉ 99H). Về vật lý, có hai thanh ghi riêng biệt (một cho truyền, một cho nhận) nhưng cùng chia sẻ một địa chỉ. Lệnh ghi (`MOV SBUF, A`) sẽ vào bộ đệm truyền. Lệnh đọc (`MOV A, SBUF`) sẽ lấy từ bộ đệm nhận."
  },
  {
    "id": 24,
    "topic": "7. 8051: Giao tiếp UART",
    "term": "Bit SMOD trong thanh ghi PCON",
    "definition": "Khi bit SMOD (PCON.7) được set lên 1, tốc độ baud trong các chế độ UART 1, 2, và 3 sẽ được nhân đôi so với khi SMOD=0."
  },
  {
    "id": 25,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Bảng Véc-tơ Ngắt",
    "definition": "Mỗi nguồn ngắt được gán một địa chỉ cố định trong bộ nhớ chương trình. Khi một ngắt được chấp nhận, CPU sẽ tự động nhảy đến địa chỉ này. Các địa chỉ: Reset (0000H), INT0 (0003H), TF0 (000BH), INT1 (0013H), TF1 (001BH), Serial (0023H)."
  },
  {
    "id": 26,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Thanh ghi IE (Interrupt Enable)",
    "definition": "Thanh ghi 8-bit, có thể định địa chỉ bit (địa chỉ A8H). Dùng để cho phép hoặc vô hiệu hóa từng nguồn ngắt. Bit EA (IE.7) là bit cho phép ngắt toàn cục, phải được set lên 1 để bất kỳ ngắt nào có thể hoạt động."
  },
  {
    "id": 27,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Thanh ghi IP (Interrupt Priority)",
    "definition": "Thanh ghi 8-bit, có thể định địa chỉ bit (địa chỉ B8H). Dùng để gán mỗi ngắt vào một trong hai mức ưu tiên: mức Cao (bit=1) hoặc mức Thấp (bit=0). Điều này cho phép thực hiện cơ chế ngắt lồng nhau."
  },
  {
    "id": 28,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Ưu tiên ngắt mặc định",
    "definition": "Khi nhiều ngắt có cùng mức ưu tiên xảy ra đồng thời, chúng sẽ được phục vụ theo một thứ tự ưu tiên cố định được định sẵn bởi phần cứng: INT0 (cao nhất) → TF0 → INT1 → TF1 → Ngắt nối tiếp (thấp nhất)."
  },
  {
    "id": 29,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Lệnh RETI (Return from Interrupt)",
    "definition": "Lệnh đặc biệt để kết thúc một chương trình con phục vụ ngắt (ISR). Nó thực hiện hai việc: (1) Lấy lại 2 byte địa chỉ trở về từ ngăn xếp và nạp vào PC. (2) Khôi phục lại trạng thái logic ưu tiên ngắt của CPU về trạng thái trước khi ngắt xảy ra."
  },
  {
    "id": 30,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Bộ nhớ phân đoạn (Segmented Memory)",
    "definition": "Cơ chế 8086 sử dụng để truy cập không gian bộ nhớ 1MB bằng các thanh ghi 16-bit. Nó chia bộ nhớ thành các đoạn 64KB chồng chéo. Một địa chỉ vật lý được tạo ra bằng cách kết hợp địa chỉ đoạn (từ thanh ghi đoạn) và địa chỉ độ dời (offset)."
  },
  {
    "id": 31,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Công thức tính địa chỉ vật lý 8086",
    "definition": "Địa chỉ Vật lý (20-bit) = (Giá trị Thanh ghi Đoạn × 16) + Giá trị Offset. Phép nhân với 16 tương đương với việc dịch trái 4 bit, hay thêm một số 0 vào cuối giá trị thanh ghi đoạn trong hệ thập lục phân."
  },
  {
    "id": 32,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Thanh ghi đoạn mặc định cho [BP]",
    "definition": "Khi thanh ghi con trỏ cơ sở BP (Base Pointer) được sử dụng để tính toán địa chỉ offset, thanh ghi đoạn mặc định được sử dụng là SS (Stack Segment). Điều này rất hữu ích cho việc truy cập các biến cục bộ và tham số được lưu trên ngăn xếp."
  },
  {
    "id": 33,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Kiến trúc BIU và EU",
    "definition": "8086 có hai khối hoạt động song song: Khối Giao tiếp Bus (BIU) chịu trách nhiệm tìm nạp lệnh, đọc/ghi dữ liệu và tính địa chỉ. Khối Thực thi (EU) chịu trách nhiệm giải mã và thực thi lệnh. BIU có một hàng đợi lệnh (prefetch queue) để nạp trước lệnh cho EU, giúp tăng hiệu suất."
  },
  {
    "id": 34,
    "topic": "10. 8086: Các kiểu định địa chỉ",
    "term": "Định địa chỉ cơ sở chỉ số với độ dời",
    "definition": "Đây là kiểu phức tạp nhất của 8086. Địa chỉ offset được tính bằng tổng của một thanh ghi cơ sở (BX hoặc BP), một thanh ghi chỉ số (SI hoặc DI), và một hằng số độ dời (8-bit hoặc 16-bit). Ví dụ: `MOV AX, TABLE[BX+SI]`."
  },
  {
    "id": 35,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh LEA (Load Effective Address)",
    "definition": "Lệnh `LEA` khác với `MOV`. Nó không đọc dữ liệu từ bộ nhớ. Thay vào đó, nó tính toán địa chỉ offset (địa chỉ hiệu dụng) của toán hạng nguồn và nạp kết quả địa chỉ đó vào thanh ghi đích. Ví dụ: `LEA AX, [BX+SI]` sẽ nạp giá trị (BX+SI) vào AX."
  },
  {
    "id": 36,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `XLAT` (Translate)",
    "definition": "Lệnh chuyên dụng cho việc truy xuất bảng tra (look-up table). Nó lấy byte tại địa chỉ [DS:BX+AL] và lưu kết quả vào lại AL. Trước khi gọi lệnh, BX phải chứa địa chỉ bắt đầu của bảng và AL chứa chỉ số của phần tử cần lấy."
  },
  {
    "id": 37,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `INC`/`DEC` và cờ Carry",
    "definition": "Một đặc điểm quan trọng của 8086 là các lệnh tăng (`INC`) và giảm (`DEC`) không ảnh hưởng đến cờ Carry (CF). Điều này cho phép chúng được dùng để điều khiển bộ đếm trong các vòng lặp xử lý các phép toán đa byte mà không làm ảnh hưởng đến kết quả của các lệnh cộng/trừ có nhớ (`ADC`/`SBB`)."
  },
  {
    "id": 38,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Cờ DF (Direction Flag)",
    "definition": "Cờ định hướng (DF) điều khiển hướng xử lý của các lệnh chuỗi (như `MOVSB`). Nếu DF=0 (lệnh `CLD`), các con trỏ chỉ số (SI, DI) sẽ tự động tăng. Nếu DF=1 (lệnh `STD`), chúng sẽ tự động giảm."
  },
  {
    "id": 39,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Cấu trúc Quasi-Bidirectional",
    "definition": "Mô tả cấu trúc của Port 1, 2, 3. Cổng có một điện trở kéo lên yếu và một transistor kéo xuống mạnh. Cấu trúc này cho phép cổng hoạt động như ngõ vào hoặc ngõ ra mà không cần thanh ghi định hướng dữ liệu (DDR) riêng biệt như các vi điều khiển khác. Ghi '1' để làm ngõ vào, ghi '0' để làm ngõ ra."
  },
  {
    "id": 40,
    "topic": "6. 8051: Timer/Counter",
    "term": "Cờ GATE trong thanh ghi TMOD",
    "definition": "Bit GATE cung cấp một phương thức điều khiển timer bằng phần cứng. Khi GATE=1, timer chỉ chạy khi thỏa mãn cả hai điều kiện: bit điều khiển TRx được set bằng phần mềm, VÀ chân ngắt ngoài tương ứng (INTx) đang ở mức cao. Điều này hữu ích để đo độ rộng xung."
  },
  {
    "id": 41,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Ngắt kích hoạt theo mức và theo sườn",
    "definition": "Các ngắt ngoài INT0 và INT1 có thể được cấu hình để kích hoạt theo 2 kiểu, điều khiển bởi bit ITx trong TCON. ITx=0: Kích hoạt theo mức (level-triggered), ngắt xảy ra miễn là chân INTx ở mức thấp. ITx=1: Kích hoạt theo sườn xuống (edge-triggered), ngắt chỉ xảy ra tại thời điểm chân INTx chuyển từ cao xuống thấp."
  },
  {
    "id": 42,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Lệnh `MUL AB` và kết quả",
    "definition": "Lệnh này nhân giá trị 8-bit không dấu trong thanh ghi A với giá trị 8-bit trong thanh ghi B. Kết quả 16-bit được lưu trong cặp thanh ghi B (chứa byte cao) và A (chứa byte thấp)."
  },
  {
    "id": 43,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Lệnh `DIV AB` và kết quả",
    "definition": "Lệnh này chia giá trị 8-bit trong A cho giá trị 8-bit trong B. Kết quả: thương số 8-bit được lưu trong A, và số dư 8-bit được lưu trong B. "
  },
  {
    "id": 44,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `CWD` (Convert Word to Doubleword)",
    "definition": "Được dùng trước các phép chia có dấu 16-bit (`IDIV`). Lệnh này mở rộng dấu của số 16-bit trong AX thành một số 32-bit trong cặp DX:AX bằng cách sao chép bit dấu của AX (bit 15) vào tất cả các bit của DX."
  },
  {
    "id": 45,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `CBW` (Convert Byte to Word)",
    "definition": "Được dùng trước các phép chia có dấu 8-bit (`IDIV`). Lệnh này mở rộng dấu của số 8-bit trong AL thành một số 16-bit trong AX bằng cách sao chép bit dấu của AL (bit 7) vào tất cả các bit của AH."
  },
  {
    "id": 46,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Thủ tục NEAR và FAR",
    "definition": "Một thủ tục `NEAR` nằm trong cùng đoạn mã (code segment) với lệnh gọi; lệnh `CALL` chỉ đẩy IP vào stack. Một thủ tục `FAR` nằm ở đoạn mã khác; lệnh `CALL` phải đẩy cả CS và IP vào stack. Tương ứng, `RET` từ thủ tục NEAR chỉ POP IP, còn `RETF` từ thủ tục FAR sẽ POP cả IP và CS."
  },
  {
    "id": 47,
    "topic": "6. 8051: Timer/Counter",
    "term": "Timer Mode 3 (Split Timer)",
    "definition": "Chế độ này chỉ áp dụng cho Timer 0. Nó tách TL0 và TH0 thành hai bộ đếm 8-bit độc lập. TL0 sử dụng các bit điều khiển của Timer 0 (TR0, TF0). TH0 mượn các bit điều khiển của Timer 1 (TR1, TF1). Điều này cho phép 8051 có 3 timer."
  },
  {
    "id": 48,
    "topic": "7. 8051: Giao tiếp UART",
    "term": "Cờ TI (Transmit Interrupt Flag)",
    "definition": "Nằm trong thanh ghi SCON. Cờ này được phần cứng tự động bật lên 1 sau khi một byte đã được truyền đi hoàn toàn khỏi bộ đệm truyền. Nó báo cho CPU biết rằng SBUF đã rỗng và sẵn sàng cho byte tiếp theo. Cờ này phải được xóa bằng phần mềm."
  },
  {
    "id": 49,
    "topic": "7. 8051: Giao tiếp UART",
    "term": "Cờ RI (Receive Interrupt Flag)",
    "definition": "Nằm trong thanh ghi SCON. Cờ này được phần cứng tự động bật lên 1 sau khi một byte đã được nhận hoàn toàn và sẵn sàng trong SBUF. Nó báo cho CPU biết có dữ liệu mới để đọc. Cờ này cũng phải được xóa bằng phần mềm sau khi đọc dữ liệu."
  },
  {
    "id": 50,
    "topic": "8. 8051: Hệ thống Ngắt",
    "term": "Ngắt lồng nhau (Nested Interrupts)",
    "definition": "Xảy ra khi một ngắt ưu tiên cao yêu cầu phục vụ trong khi một ISR của ngắt ưu tiên thấp đang được thực thi. CPU sẽ tạm dừng ISR ưu tiên thấp, phục vụ ISR ưu tiên cao, sau đó quay lại hoàn thành ISR ưu tiên thấp. Điều này chỉ xảy ra khi các ngắt có mức ưu tiên khác nhau được định nghĩa trong thanh ghi IP."
  },
  {
    "id": 51,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `TEST`",
    "definition": "Lệnh `TEST` hoạt động tương tự lệnh `AND` nhưng không thay đổi giá trị của toán hạng đích. Nó thực hiện phép AND logic giữa hai toán hạng và cập nhật các cờ (đặc biệt là ZF, SF, PF) dựa trên kết quả. Thường được dùng để kiểm tra trạng thái của các bit cụ thể mà không làm thay đổi dữ liệu."
  },
  {
    "id": 52,
    "topic": "5. 8051: Các kiểu định địa chỉ",
    "term": "Lệnh `JBC bit, reladdr`",
    "definition": "Jump if Bit is set and Clear bit. Đây là một lệnh 2 trong 1: Nó kiểm tra một bit có thể định địa chỉ. Nếu bit đó bằng 1, nó sẽ xóa bit đó về 0 và sau đó nhảy đến địa chỉ tương đối được chỉ định. Nếu bit bằng 0, nó sẽ bỏ qua và thực thi lệnh tiếp theo."
  },
  {
    "id": 53,
    "topic": "4. 8051: Tập thanh ghi",
    "term": "Lệnh `DA A` (Decimal Adjust Accumulator)",
    "definition": "Dùng để hiệu chỉnh kết quả sau một phép cộng hai số BCD (Binary Coded Decimal). Lệnh này kiểm tra 4 bit thấp, 4 bit cao và các cờ AC, CY để cộng thêm các giá trị cần thiết (00H, 06H, 60H, hoặc 66H) nhằm đảm bảo kết quả trong A vẫn là một số BCD hợp lệ."
  },
  {
    "id": 54,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Cờ AF (Auxiliary Carry Flag) trong 8086",
    "definition": "Cờ nhớ phụ, chỉ ra có một sự nhớ hoặc mượn từ bit 3 sang bit 4 trong thanh ghi AL. Cờ này rất quan trọng cho các lệnh hiệu chỉnh thập phân như `DAA` (Decimal Adjust for Addition) và `DAS` (Decimal Adjust for Subtraction) để thực hiện các phép toán trên số BCD."
  },
  {
    "id": 55,
    "topic": "9. 8086: Kiến trúc & Bộ nhớ",
    "term": "Ngăn xếp (Stack) của 8086",
    "definition": "Ngăn xếp của 8086 được quản lý bởi cặp thanh ghi SS:SP và phát triển về phía địa chỉ thấp. Khi PUSH một giá trị, SP sẽ giảm đi 2. Khi POP một giá trị, SP sẽ tăng lên 2. Nó được dùng để lưu địa chỉ trở về, tham số hàm và biến cục bộ."
  },
  {
    "id": 56,
    "topic": "2. 8051: Chân tín hiệu & Cổng I/O",
    "term": "Chân RST (Reset)",
    "definition": "Là chân vào reset, tích cực ở mức cao. Khi một xung điện áp mức cao được giữ ở chân này trong ít nhất hai chu kỳ máy, 8051 sẽ được thiết lập lại về trạng thái ban đầu: PC về 0000H, SP về 07H, các cổng I/O được cấu hình làm ngõ vào."
  },
  {
    "id": 57,
    "topic": "3. 8051: Tổ chức Bộ nhớ",
    "term": "Giao tiếp RAM ngoài",
    "definition": "Sử dụng các lệnh `MOVX`. Bus địa chỉ được tạo từ Port 2 (A8-A15) và Port 0 (A0-A7). Tín hiệu ALE và chốt ngoài (74LS373) dùng để tách bus. Các tín hiệu điều khiển đọc/ghi là RD (P3.7) và WR (P3.6)."
  },
  {
    "id": 58,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Lệnh `LOOPNE`/`LOOPNZ`",
    "definition": "Loop if Not Equal / Loop if Not Zero. Lệnh lặp có điều kiện kép. Nó sẽ giảm CX, sau đó kiểm tra hai điều kiện: CX có khác 0 không VÀ cờ Zero (ZF) có bằng 0 không. Nếu cả hai điều kiện đều đúng, nó mới thực hiện bước nhảy."
  },
  {
    "id": 59,
    "topic": "11. 8086: Tập lệnh & Cờ",
    "term": "Cờ IF (Interrupt Enable Flag) trong 8086",
    "definition": "Điều khiển việc CPU có chấp nhận các yêu cầu ngắt phần cứng (từ chân INTR) hay không. Lệnh `STI` (Set Interrupt Flag) sẽ set IF=1 để cho phép ngắt. Lệnh `CLI` (Clear Interrupt Flag) sẽ xóa IF=0 để tạm thời vô hiệu hóa các ngắt này."
  },
  {
    "id": 60,
    "topic": "5. 8051: Các kiểu định địa chỉ",
    "term": "So sánh `ACALL` và `LCALL`",
    "definition": "`ACALL` (Absolute Call) là lệnh gọi 2 byte, nhảy trong phạm vi 2KB, nhanh hơn và tốn ít bộ nhớ hơn. `LCALL` (Long Call) là lệnh gọi 3 byte, có thể nhảy đến bất kỳ đâu trong không gian 64KB nhưng chậm hơn và tốn nhiều bộ nhớ hơn."
  }
]